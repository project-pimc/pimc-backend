name: Deploy Backend Staging

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Install GitHub SSH key
      - name: Setup GitHub SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      # 2. Clone via SSH using your GitHub key
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false   # donâ€™t overwrite the SSH setup
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3. Install your serverâ€™s PEM
      - name: Setup Server SSH Key
        run: |
          echo "${{ secrets.SERVER_PEM_KEY }}" > ~/.ssh/server_key.pem
          chmod 600 ~/.ssh/server_key.pem
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 4. SSH into your server using the PEM
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PEM_KEY }}     # point at your PEM file, not id_rsa :contentReference[oaicite:0]{index=0}
          # passphrase: ${{ secrets.SERVER_PEM_PASSPHRASE }}  # if your PEM is encrypted
          script: |
            set -e
            # Load NVM if installed via NVM (or add other environment setup)
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            echo "ðŸ”¹ Navigating to project directory"
            cd ~/pimc-backend
            echo "ðŸ”¹ Checking Git status"
            git status || exit 1
            echo "ðŸ”¹ Pulling latest code"
            git pull origin main || exit 1
            echo "ðŸ”¹ Installing dependencies"
            npm install || exit 1
            echo "ðŸ”¹ Building Nest.js project"
            NODE_OPTIONS="--max_old_space_size=4096" npm run build || exit 1
            echo "ðŸ”¹ Restarting app using PM2"
            pm2 restart backend-live || pm2 start "npm run start:prod" --name backend-live
            echo "âœ… Deployment successful!"

